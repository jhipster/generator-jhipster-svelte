<script>
	import { onMount } from 'svelte'
	import { goto } from '$app/navigation'
	import { faPlus } from '@fortawesome/free-solid-svg-icons'

	import <%= entityInstance %>Service from '$lib/entities/<%= entityFolderName %>/<%= entityFileName %>-service'
	import { Button, Icon } from 'jhipster-svelte-library'
	import { Page, DeleteModal<% if (searchEngineAny) { %>, SearchForm<% } %> } from 'jhipster-svelte-library/page'
<%_ if (!paginationNo) { _%>
	import { Pagination } from 'jhipster-svelte-library/table'
<%_ } _%>

	import <%= entityAngularName %>Table from '$lib/entities/<%= entityFolderName %>/<%= entityFileName %>-table.svelte'

	let error
	let <%= entityInstancePlural %> = []
<%_ if (!paginationNo) { _%>
	let sortPredicate = 'id'
	let sortOrder = 'asc'
	let pageSize = 15
	let page = 1
	let totalCount = 0
<%_ } _%>
	let loading = true
	let showDeleteModal = false
	let <%= entityInstance %>Id = null
<%_ if (searchEngineAny) { _%>
	let searchCriteria
<%_ } _%>

	onMount(() => fetch<%= entityClassPlural %>())

<%_ if (searchEngineAny) { _%>
	function fetch<%= entityClassPlural %>() {
		loading = true
		error = undefined

		if (searchCriteria) {
			<%= entityInstance %>Service
			<%_ if (!paginationNo) { _%>
				.search(
					searchCriteria,
					page,
					pageSize,
					sortPredicate,
					sortOrder
				)
			<%_ } else { _%>
				.search(searchCriteria)
			<%_ } _%>
				.then(res => {
				<%_ if (!paginationNo) { _%>
					<%= entityInstancePlural %> = res.data
					totalCount = parseInt(res.totalCount)
				<%_ } else { _%>
					<%= entityInstancePlural %> = res
				<%_ } _%>
				})
				.catch(err => (error = err))
				.finally(() => (loading = false))
		} else {
			<%= entityInstance %>Service
				.findAll(<% if (!paginationNo) { %>page, pageSize, sortPredicate, sortOrder<% } %>)
				.then(res => {
				<%_ if (!paginationNo) { _%>
					<%= entityInstancePlural %> = res.data
					totalCount = parseInt(res.totalCount)
				<%_ } else { _%>
					<%= entityInstancePlural %> = res
				<%_ } _%>
				})
				.catch(err => (error = err))
				.finally((loading = false))
		}
	}
<%_ } else { _%>
	function fetch<%= entityClassPlural %>() {
		loading = true
		error = undefined
		<%= entityInstance %>Service
			.findAll(<% if (!paginationNo) { %>page, pageSize, sortPredicate, sortOrder<% } %>)
			.then(res => {
			<%_ if (!paginationNo) { _%>
				<%= entityInstancePlural %> = res.data
				totalCount = res.totalCount
			<%_ } else { _%>
				<%= entityInstancePlural %> = res
			<%_ } _%>
			})
			.catch(err => (error = err))
			.finally((loading = false))
	}
<%_ } _%>

	function view<%= entityAngularName %>(event) {
		goto(`/entities/<%= entityFolderName %>/${event.detail.id}/view`)
	}

	function update<%= entityAngularName %>(event) {
		goto(`/entities/<%= entityFolderName %>/${event.detail.id}/edit`)
	}

	function showDelete<%= entityAngularName %>Modal(event) {
		<%= entityInstance %>Id = event.detail.id
		showDeleteModal = true
	}

	function closeDelete<%= entityAngularName %>Modal() {
		showDeleteModal = false
		<%= entityInstance %>Id = null
	}

	function delete<%= entityAngularName %>(event) {
		<%= entityInstance %>Service
			.delete(<%= entityInstance %>Id)
			.then(() => fetch<%= entityClassPlural %>())
			.catch(err => (error = err))
			.finally(() => (showDeleteModal = false), (<%= entityInstance %>Id = null))
	}
<%_ if (!paginationNo) { _%>

	function sortByPredicate(event) {
		sortPredicate = event.detail.sortPredicate
		sortOrder = event.detail.sortOrder
		fetch<%= entityClassPlural %>()
	}

	function handlePageChange(event) {
		page = event.detail.page
		fetch<%= entityClassPlural %>()
	}
<%_ } _%>
<%_ if (searchEngineAny) { _%>

	function search<%= entityClassPlural %>(event) {
		searchCriteria = event.detail.criteria
		fetch<%= entityClassPlural %>()
	}
<%_ } _%>
</script>

<svelte:head>
	<title><%= entityClassPluralHumanized %></title>
	<meta name="Description" content="<%= entityAngularName %> list" />
</svelte:head>

<Page testId="<%= entityInstance %>" width="full">
	<div
		class="text-left flex flex-row justify-between items-center"
		slot="header"
	>
		<span><%= entityClassPluralHumanized %></span>
		<div class="flex flex-row justify-end text-base">
			<Button
				classes="sm:my-0"
				on:click="{() => goto(`/entities/<%= entityFolderName %>/new`)}"
			>
				<Icon classes="mr-2" icon="{faPlus}" />
				Create <%= entityClassHumanized %>
			</Button>
		</div>
	</div>
	{#if showDeleteModal}
		<DeleteModal
			id="{<%= entityInstance %>Id}"
			on:close="{closeDelete<%= entityAngularName %>Modal}"
			on:delete="{delete<%= entityAngularName %>}"
		>
			<svelte:fragment slot="confirm">
				Are you sure you want to delete the <%= entityClassHumanized %>?
			</svelte:fragment>
		</DeleteModal>
	{/if}
	<div
		class="flex flex-row justify-between items-center text-base mt-4"
	><%_ if (searchEngineAny) { _%>
		<SearchForm testId="<%= entityInstance %>" name="<%= entityInstance %>" on:search="{search<%= entityClassPlural %>}" />
	<%_ }
		if (!paginationNo) { _%>
		<Pagination
			totalCount="{totalCount}"
			pageSize="{pageSize}"
			page="{page}"
			classes="my-2"
			on:pagechange="{handlePageChange}"
		/>
	<%_ } _%>
	</div>
	{#if !loading}
		<<%= entityAngularName %>Table
			<%= entityInstancePlural %>="{<%= entityInstancePlural %>}"
		<%_ if (!paginationNo) { _%>
			sortPredicate="{sortPredicate}"
			on:sortbypredicate="{sortByPredicate}"
		<%_ } _%>
			on:update="{update<%= entityAngularName %>}"
			on:view="{view<%= entityAngularName %>}"
			on:delete="{showDelete<%= entityAngularName %>Modal}"
		/>
	{/if}
<%_ if (!paginationNo) { _%>
	<Pagination
		totalCount="{totalCount}"
		pageSize="{pageSize}"
		page="{page}"
		classes="mt-4"
		on:pagechange="{handlePageChange}"
	/>
<%_ } _%>
</Page>
